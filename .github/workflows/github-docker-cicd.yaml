name: Github-Docker Hub MLOps pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.12" # aligne avec ton Dockerfile python:3.12-slim

jobs:
  ci_pipeline:
    name: CI — Lint & Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # outils de qualité
          pip install black pylint pytest

      - name: Format (check only)
        run: |
          black --check app.py

      - name: Lint
        run: |
          pylint --disable=R,C app.py

      - name: Tests
        run: |
          if [ -f test.py ]; then pytest -vv test.py; else echo "No tests found, skipping"; fi

  cd_pipeline:
    name: CD — Build & Push Docker
    runs-on: ubuntu-latest
    needs: [ ci_pipeline ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (optionnel multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Génère automatiquement les tags/labels (latest, sha, date)
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short,prefix=sha-
            type=datetime,format=YYYYMMDD-HHmm

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64   # ajoute ,linux/arm64 si besoin multi-arch
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
